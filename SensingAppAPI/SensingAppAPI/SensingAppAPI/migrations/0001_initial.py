# Generated by Django 4.0.6 on 2023-08-31 03:44

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appusage',
            fields=[
                ('usageid', models.AutoField(primary_key=True, serialize=False)),
                ('packagename', models.CharField(max_length=100)),
                ('appname', models.CharField(max_length=50)),
                ('timeopened', models.DateTimeField()),
                ('timeclosed', models.DateTimeField()),
            ],
            options={
                'db_table': 'appusage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gpslog',
            fields=[
                ('gpslogid', models.AutoField(primary_key=True, serialize=False)),
                ('time', models.DateTimeField(db_column='Time')),
                ('longitude', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('latitude', models.DecimalField(decimal_places=65535, max_digits=65535)),
            ],
            options={
                'db_table': 'gpslog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Msreports',
            fields=[
                ('reportid', models.AutoField(primary_key=True, serialize=False)),
                ('time', models.DateTimeField(db_column='Time')),
                ('q1', models.SmallIntegerField(blank=True, null=True)),
                ('q2', models.SmallIntegerField(blank=True, null=True)),
                ('q3', models.SmallIntegerField(blank=True, null=True)),
                ('q4', models.SmallIntegerField(blank=True, null=True)),
                ('q5', models.SmallIntegerField(blank=True, null=True)),
                ('q6', models.SmallIntegerField(blank=True, null=True)),
                ('q7', models.SmallIntegerField(blank=True, null=True)),
                ('q8', models.SmallIntegerField(blank=True, null=True)),
                ('q9', models.SmallIntegerField(blank=True, null=True)),
                ('q10', models.SmallIntegerField(blank=True, null=True)),
                ('q11', models.SmallIntegerField(blank=True, null=True)),
                ('q12', models.SmallIntegerField(blank=True, null=True)),
                ('q13', models.SmallIntegerField(blank=True, null=True)),
                ('q14', models.SmallIntegerField(blank=True, null=True)),
                ('q15', models.SmallIntegerField(blank=True, null=True)),
                ('q16', models.SmallIntegerField(blank=True, null=True)),
                ('q17', models.SmallIntegerField(blank=True, null=True)),
                ('q18', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'msreports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userdetails',
            fields=[
                ('userid', models.AutoField(primary_key=True, serialize=False)),
                ('appkey', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'userdetails',
                'managed': False,
            },
        ),
    ]
